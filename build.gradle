apply plugin: "java-library"
apply plugin: "maven-publish"

// Plugin config
ext.pluginName = "PlayTimeTracker"
ext.pluginname = ext.pluginName.toLowerCase()
ext.majorVersion = 0
ext.minorVersion = 4
ext.minecraftVersion = "1.16.1"
sourceCompatibility = 1.8
targetCompatibility = 1.8

// Suppiled by Jenkins
ext.buildNumber = System.env.BUILD_NUMBER == null ? "x"                : "$System.env.BUILD_NUMBER"
ext.mavenDirectory = System.env.MAVEN_DIR == null ? "$projectDir/repo" : "$System.env.MAVEN_DIR"
ext.jdDirectory = System.env.JAVADOCS_DIR == null ? null               : "$System.env.JAVADOCS_DIR"

// Version used for distribution. Different from maven repo
group = "cat.nyaa"
archivesBaseName = "${pluginName}-mc$minecraftVersion"
version = "$majorVersion.$minorVersion.$buildNumber"

repositories {
    jcenter()
    maven { name 'Spigot';      url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { name 'Sonatype';    url 'https://oss.sonatype.org/content/groups/public' }
    maven { name 'EssentialsX'; url 'https://ci.ender.zone/plugin/repository/everything' }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:$minecraftVersion-R0.1-SNAPSHOT"
    compileOnly('net.ess3:EssentialsX:2.18.0') { transitive = false }
}

compileJava {
    options.compilerArgs += ["-Xlint:deprecation"]
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = "sources"
}
if (ext.jdDirectory != null) {
    javadoc.destinationDir = file("${jdDirectory}/${pluginname}-${version}")
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}
processResources { // modify version string
    filesMatching("**/plugin.yml") {
        expand 'version': project.version
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact sourcesJar
            artifact javadocJar
            artifactId "${pluginname}"
            version "$majorVersion.$minorVersion-SNAPSHOT"
            from components.java
        }
    }
    repositories {
        maven {
            url "${mavenDirectory}"
        }
    }
}


javadoc {
    (options as StandardJavadocDocletOptions).with {
        links 'https://docs.oracle.com/en/java/javase/14/docs/api/'
        links 'https://hub.spigotmc.org/javadocs/spigot/'
        links 'https://google.github.io/guava/releases/21.0/api/docs/'
        links 'https://ci.md-5.net/job/BungeeCord/ws/chat/target/apidocs/'

        locale 'en_US'
        encoding 'UTF-8'
        docEncoding 'UTF-8'
        addBooleanOption('keywords', true)
        addStringOption('Xdoclint:none', '-quiet')

        if (JavaVersion.current() > JavaVersion.VERSION_1_9) {
            options.addBooleanOption('html5', true)
        }

        windowTitle = "${pluginName} Javadoc"
        docTitle = "${pluginName} (mc$minecraftVersion-${project.version})"
    }
}

task copyToDebug(type: Copy) {
    from "build/libs"
    into project.getProperties().get("target")
    exclude("*-javadoc.jar", "*-sources.jar")
}