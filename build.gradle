plugins {
    id 'java-library'
    id 'maven-publish'
}

// Plugin config
ext.pluginName = "PlayTimeTracker"
ext.pluginname = ext.pluginName.toLowerCase()
ext.majorVersion = 0
ext.minorVersion = 6
ext.minecraftVersion = "1.18"
sourceCompatibility = 17
targetCompatibility = 17

// Supplied by Jenkins
ext.buildNumber = System.env.BUILD_NUMBER == null ? "x"                : "$System.env.BUILD_NUMBER"
ext.mavenDirectory = System.env.MAVEN_DIR == null ? "$projectDir/repo" : "$System.env.MAVEN_DIR"
ext.jdDirectory = System.env.JAVADOCS_DIR == null ? null               : "$System.env.JAVADOCS_DIR"

// Version used for distribution. Different from maven repo
group = "cat.nyaa"
archivesBaseName = "${pluginName}-mc$minecraftVersion"
version = "$majorVersion.$minorVersion.$buildNumber".toString()

repositories {
    mavenCentral()
    //'Spigot';
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }

    maven { name 'Sonatype';             url 'https://oss.sonatype.org/content/groups/public' }
    maven { name "essentialsx-releases"; url "https://repo.essentialsx.net/releases/"}
    maven { name "papermc";              url "https://papermc.io/repo/repository/maven-public/"}
    maven { name 'NyaaCat';              url 'https://ci.nyaacat.com/maven/' }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:$minecraftVersion-R0.1-SNAPSHOT"
    compileOnly 'net.essentialsx:EssentialsX:2.19.0'

    // other nyaa plugins
    if (gradle.hasProperty("useLocalDependencies") && gradle.useLocalDependencies) {
        compileOnly project(":NyaaCore")
    } else {
        compileOnly('cat.nyaa:nyaacore:9.0-SNAPSHOT') { transitive = true }
    }

    compileOnly 'org.jetbrains:annotations:22.0.0'
}

compileJava {
    options.compilerArgs += ["-Xlint:deprecation"]
    options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.java.srcDirs
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}
if (ext.jdDirectory != null) {
    javadoc.destinationDir = file("${jdDirectory}/${pluginname}-${version}")
}
processResources { // modify version string
    filesMatching("**/plugin.yml") {
        expand 'version': project.version
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            group      project.group
            artifactId pluginname
            version "$majorVersion.$minorVersion-SNAPSHOT"

            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            url mavenDirectory
        }
    }
}


javadoc {
    (options as StandardJavadocDocletOptions).with {
        links 'https://docs.oracle.com/en/java/javase/14/docs/api/'
        links 'https://hub.spigotmc.org/javadocs/spigot/'
        links 'https://guava.dev/releases/21.0/api/docs/'
        links 'https://ci.md-5.net/job/BungeeCord/ws/chat/target/apidocs/'

        locale 'en_US'
        encoding 'UTF-8'
        docEncoding 'UTF-8'
        addBooleanOption('keywords', true)
        addStringOption('Xdoclint:none', '-quiet')

        if (JavaVersion.current() > JavaVersion.VERSION_1_9) {
            options.addBooleanOption('html5', true)
        }

        windowTitle = "${pluginName} Javadoc"
        docTitle = "${pluginName} (mc$minecraftVersion-${project.version})"
    }
}